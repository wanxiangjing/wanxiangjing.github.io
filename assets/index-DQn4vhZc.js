import{a as g}from"./utils-vendor-NIGUFBhG.js";import{a as f}from"./ui-vendor-B_BG4PkP.js";import{v as h,F as l,G as p}from"./index-C7R3IaCj.js";import"./core-vendor-BY2yH0eA.js";const T=s=>a.post("/auth/login",s),k=s=>a.post("/auth/register",s),m=s=>a.post("/auth/refresh",{refreshToken:s}),d=()=>a.post("/auth/profile"),P=(s,t)=>{const e=new Uint8Array(4);for(let i=0;i<t.length;i++)e[i]=t.charCodeAt(i);const n=new Uint32Array(1),o=new TextEncoder().encode(s);n[0]=o.length;const r=new Uint8Array(e.length+4+o.length);return r.set(e,0),r[4]=n[0]>>24&255,r[5]=n[0]>>16&255,r[6]=n[0]>>8&255,r[7]=n[0]&255,r.set(o,8),r.buffer},S=s=>{const t=new Uint8Array(s,0,4),e=new Uint8Array(s,4,4),n=new Uint8Array(s,8);let o="";for(let c=0;c<t.length;c++)o+=String.fromCharCode(t[c]);const r=e[0]<<24|e[1]<<16|e[2]<<8|e[3],i=new TextDecoder().decode(n.subarray(0,r));return{type:o,value:i}},b=s=>/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/.test(s);function q(s){if(s.length<8||s.length>16)return!1;const t=/[a-zA-Z]/.test(s),e=/\d/.test(s),n=/[^a-zA-Z0-9]/.test(s);return t||e||n}const y=s=>!s.trim(),A=s=>!y(s);class w{accessToken;refreshToken;constructor(){this.accessToken=null,this.refreshToken=localStorage.getItem("refreshToken"),this.refreshToken?setTimeout(()=>{this.refreshAccessToken().then(()=>{this.getUserInfo().then(t=>{h.dispatch(l(t))})})},0):window.location.href="/#/login"}async getUserInfo(){return await d()}async login(t){const e=await T(t);return this.afterLogin(e)}async register(t){const e=await k(t);return this.afterLogin(e)}afterLogin(t){return this.accessToken=t.access_token,this.refreshToken=t.refresh_token,localStorage.setItem("refreshToken",t.refresh_token),h.dispatch(l(t.user)),h.dispatch(p({isLogin:!0})),t}async refreshAccessToken(){if(!this.refreshToken)throw new Error("No refresh token available");const t=await m(this.refreshToken);return this.accessToken=t.access_token,t.access_token}getAccessToken(){return this.accessToken}getRefreshToken(){return this.refreshToken}getIsLogin(){return this.refreshToken!==null&&A(this.refreshToken)}logout(){this.accessToken=null,this.refreshToken=null,localStorage.removeItem("refreshToken")}}const u=new w;class U{client;constructor(t){this.client=g.create({baseURL:t,timeout:1e4,headers:{"Content-Type":"application/json"}}),this.client.interceptors.request.use(e=>{const n=u.getAccessToken();return n&&(e.headers.Authorization=`Bearer ${n}`),e},e=>Promise.reject(e)),this.client.interceptors.response.use(e=>e.data.code!==200?Promise.reject(new Error(e.data.message)):e.data.data,e=>e.response?.status===401?(console.log(e.config.url),e.config.url==="/auth/refresh"?(u.logout(),window.location.href="/#/login",f.show({icon:"!",content:"登录过期，请重新登录",duration:1e3}),Promise.reject(e)):u.refreshAccessToken().then(n=>n?(e.config.headers.Authorization=`Bearer ${n}`,this.client(e.config)):Promise.reject(e))):(e.response?.status===400&&f.show({icon:"!",content:e.response.data.message,duration:1e3}),Promise.reject(e)))}async request(t){return await this.client.request(t)}async get(t,e){return this.request({method:"GET",url:t,params:e})}async post(t,e){return this.request({method:"POST",url:t,data:e})}async put(t,e){return this.request({method:"PUT",url:t,data:e})}async delete(t,e){return this.request({method:"DELETE",url:t,params:e})}}const a=new U("https://api.aibanyou.top/api/v1/usr/");export{u as a,a as b,q as c,b as i,P as s,S as t};
